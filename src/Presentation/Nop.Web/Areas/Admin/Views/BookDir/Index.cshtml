@model BookDirSearchModel

@{
    //page title
    ViewBag.Title = T("Admin.AiBook.BookDir").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("课本目录");
}
@{
    const string hideSearchBlockAttributeName = "BookDirPage.HideSearchBlock";
    var hideSearchBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSearchBlockAttributeName);
}
<nop-antiforgery-token />
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.AiBook.BookDir")
    </h1>
    <div class="pull-right">
        <a asp-action="Create" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>
        <div class="btn-group">
            <button type="button" class="btn btn-success">
                <i class="fa fa-download"></i>
                @T("Admin.Common.Export")
            </button>
            <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                <span class="caret"></span>
                <span class="sr-only">&nbsp;</span>
            </button>
            <ul class="dropdown-menu" role="menu">
                <li>
                    <a asp-action="ExportXml">
                        <i class="fa fa-file-code-o"></i>
                        @T("Admin.Common.ExportToXml")
                    </a>
                </li>
                <li>
                    <a asp-action="ExportXlsx">
                        <i class="fa fa-file-excel-o"></i>
                        @T("Admin.Common.ExportToExcel")
                    </a>
                </li>
            </ul>
        </div>
        <button type="button" name="importexcel" class="btn bg-olive" data-toggle="modal" data-target="#importexcel-window">
            <i class="fa fa-upload"></i>
            @T("Admin.Common.Import")
        </button>
        @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.CategoryListButtons })
    </div>
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                        <div class="search-text">@T("Admin.Common.Search")</div>
                        <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                        <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                    </div>

                    <div class="search-body @(hideSearchBlock ? "closed" : "")">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchDirName" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="SearchDirName" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="CategoryID" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="CategoryID" asp-items="Model.AvailableCategories" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="BookID" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="BookID" asp-items="Model.AvailableBooks" />
                                    </div>
                                </div>


                                <div class="form-group">
                                    <div class="col-md-8 col-md-offset-4">
                                        <button type="button" id="search-bookdirs" class="btn btn-primary btn-search"><i class="fa fa-search"></i>@T("Admin.Common.Search")</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    @await Html.PartialAsync("Table", new DataTablesModel
               {
                   Name = "bookdirs-grid",
                   UrlRead = new DataUrl("GetList", "BookDir", null),
                   SearchButtonId = "search-bookdirs",
                   Length = Model.PageSize,
                   LengthMenu = Model.AvailablePageSizes,
                   Filters = new List<FilterParameter>
                        {
                            new FilterParameter(nameof(Model.SearchDirName)),
                            new FilterParameter(nameof(Model.SearchStoreId)),
                            new FilterParameter(nameof(Model.CategoryID)),
                            new FilterParameter(nameof(Model.BookID))

                        },
                   ColumnCollection = new List<ColumnProperty>
                        {
                            new ColumnProperty(nameof(BookDirModel.Breadcrumb))
                            {
                                Title = T("Admin.AiBook.BookDir.Fields.Breadcrumb").Text
                            },
                            new ColumnProperty(nameof(BookDirModel.Published))
                            {
                                Title = T("Admin.AiBook.BookDir.Fields.Published").Text,
                                Width = "100",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
                            },
                            new ColumnProperty(nameof(BookDirModel.DisplayOrder))
                            {
                                Title = T("Admin.AiBook.BookDir.Fields.Fields.DisplayOrder").Text,
                                Width = "150",
                                ClassName =  NopColumnClassDefaults.CenterAll
                            },
                            new ColumnProperty(nameof(BookDirModel.Id))
                            {
                                Title = T("Admin.Common.Edit").Text,
                                Width = "100",
                                ClassName =  NopColumnClassDefaults.Button,
                                Render = new RenderButtonEdit(new DataUrl("BookDir/Edit"))
                            }
                        }
               })
                </div>
            </div>
        </div>
    </div>
</div>

@*import categories form*@
<div id="importexcel-window" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="importexcel-window-title">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="importexcel-window-title">@T("Admin.Common.ImportFromExcel")</h4>
            </div>
            <form asp-controller="Category" asp-action="ImportFromXlsx" method="post" enctype="multipart/form-data">
                <div class="form-horizontal">
                    <div class="modal-body">
                        <ul class="common-list">
                            <li>
                                <em>@T("Admin.Catalog.Categories.List.ImportFromExcelTip")</em>
                            </li>
                            <li>
                                <em>@T("Admin.Common.ImportFromExcel.ManyRecordsWarning")</em>
                            </li>
                        </ul>
                        <div class="form-group">
                            <div class="col-md-2">
                                <div class="label-wrapper">
                                    <label class="control-label">
                                        @T("Admin.Common.ExcelFile")
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <input type="file" id="importexcelfile" name="importexcelfile" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            @T("Admin.Common.ImportFromExcel")
                        </button>
                    </div>
                </div>
            </form>
        </div><script>
      $(document).ready(function () {


            //书籍类别
            $("#@Html.IdFor(model => model.CategoryID)").click(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.IdFor(model => model.BookID)");

                var postData = {
                    CategoryID: selectedItem,
                    addSelectStateItem: "true"
                };

                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetBooksByCategory", "BookDir"))",
                    data: postData,
                    success: function (data, textStatus, jqXHR) {

                      //  console.log("添加数据：" + JSON.stringify(data));

                        ddlStates.html('');
                        $.each(data, function(id, option) {
                            ddlStates.append($('<option></option>').val(option.Id).html(option.Name));
                        });
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#statesAlert").click();
                    }
                });
            });


            ///
            $("#@Html.IdFor(model => model.BookID)").click(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.IdFor(model => model.BookDirId)");

                var postData = {
                    BookID: selectedItem,
                    addSelectStateItem: "true"
                };

                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetBookDirByBookId", "BookDir"))",
                    data: postData,
                    success: function (data, textStatus, jqXHR) {
                        ddlStates.html('');
                        $.each(data, function(id, option) {
                            ddlStates.append($('<option></option>').val(option.Id).html(option.Name));
                        });
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#statesAlert").click();
                    }
                });
            });
        });
</script>
    </div>
</div>
